name: Node.js CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  backend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v4
      # 소스 코드 체크아웃

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./baseball-server/backend/package-lock.json
        # 백엔드 Node.js 및 npm 캐시 설정

    - name: Install backend dependencies
      run: npm ci
      working-directory: ./baseball-server/backend
      # 백엔드 종속성 설치

    - name: Build backend
      run: npm run build
      working-directory: ./baseball-server/backend
      # 백엔드 빌드

    - name: Test backend
      run: npm test
      working-directory: ./baseball-server/backend
      # 백엔드 테스트 실행

    - name: Create ENV config file
      run: |
        echo "${{ secrets.ENV }}" > .env
      working-directory: ./baseball-server/backend
      # 백엔드 ENV 파일 생성

  frontend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v4
      # 소스 코드 체크아웃

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./baseball-server/frontend/package-lock.json
        # 프론트엔드 Node.js 및 npm 캐시 설정

    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./baseball-server/frontend
      # 프론트엔드 종속성 설치

    - name: Build frontend
      run: npm run build
      working-directory: ./baseball-server/frontend
      # 프론트엔드 빌드 (React 프로젝트)

    - name: Test frontend
      run: npm test
      working-directory: ./baseball-server/frontend
      # 프론트엔드 테스트 실행
